{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTodos } from '../actions';\n\n// we want to export the connected version of App not the class version \nclass _App extends React.Component {\n  componentDidMount() {\n    this.props.fetchTodos();\n  }\n\n}\n\nconst mapStateToProps = _ref => {\n  let {\n    todos\n  } = _ref;\n  return {\n    todos\n  };\n};\n\nexport const App = connect(mapStateToProps, {\n  fetchTodos\n})(_App);","map":{"version":3,"sources":["/Users/robgentile/Dev/udemy/typescript_course/rrts/src/components/App.tsx"],"names":["React","connect","fetchTodos","_App","Component","componentDidMount","props","mapStateToProps","todos","App"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAeC,UAAf,QAAiC,YAAjC;;AASA;AACA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAA6C;AAC3CC,EAAAA,iBAAiB,GAAG;AACpB,SAAKC,KAAL,CAAWJ,UAAX;AACC;;AAH0C;;AAM7C,MAAMK,eAAe,GAAG,QAA8C;AAAA,MAA7C;AAAEC,IAAAA;AAAF,GAA6C;AACpE,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAFD;;AAIA,OAAO,MAAMC,GAAG,GAAGR,OAAO,CACxBM,eADwB,EAExB;AAAEL,EAAAA;AAAF,CAFwB,CAAP,CAGjBC,IAHiB,CAAZ","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Todo, fetchTodos } from '../actions'\nimport { StoreState } from '../reducers'\n\ninterface AppProps {\n  todos: Todo[],\n  fetchTodos(): any,\n\n}\n\n// we want to export the connected version of App not the class version \nclass _App extends React.Component<AppProps> {\n  componentDidMount() {\n  this.props.fetchTodos()\n  }\n}\n\nconst mapStateToProps = ({ todos }: StoreState): { todos: Todo[] } => {\n  return { todos }\n}\n\nexport const App = connect(\n  mapStateToProps,\n  { fetchTodos }\n)(_App)"]},"metadata":{},"sourceType":"module"}