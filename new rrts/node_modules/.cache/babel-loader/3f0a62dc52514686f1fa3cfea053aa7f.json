{"ast":null,"code":"import axios from \"axios\";\nimport { ActionTypes } from \"./types\";\n// creating an interface to describe an action is very useful\nconst url = \"https://jsonplaceholder.typicode.com/todos\";\nexport const fetchTodos = () => {\n  return async dispatch => {\n    const response = await axios.get(url); // the Todo[] tells typescript that inside of response data\n    // we will have a Todo that satisfies the Todo interface.\n    // Await suspends the execution until an asychoronous function return promise is fullfilled\n\n    dispatch({\n      //we add the generic type to ensure we are always passing in an object with the correct types\n      type: ActionTypes.fetchTodos,\n      payload: response.data\n    });\n  };\n};","map":{"version":3,"sources":["/Users/robgentile/Dev/udemy/typescript_course/rrts/src/actions/index.ts"],"names":["axios","ActionTypes","url","fetchTodos","dispatch","response","get","type","payload","data"],"mappings":"AAAA,OAAOA,KAAP,MAAwC,OAAxC;AAEA,SAASC,WAAT,QAA4B,SAA5B;AAYA;AAEA,MAAMC,GAAG,GAAG,4CAAZ;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAO,MAAOC,QAAP,IAA8B;AACnC,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAkBJ,GAAlB,CAAvB,CADmC,CAEnC;AACA;AACA;;AACAE,IAAAA,QAAQ,CAAmB;AACzB;AACAG,MAAAA,IAAI,EAAEN,WAAW,CAACE,UAFO;AAGzBK,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAHO,KAAnB,CAAR;AAKD,GAVD;AAWD,CAZM","sourcesContent":["import axios, { responseEncoding } from \"axios\"\nimport { Dispatch } from \"redux\"\nimport { ActionTypes } from \"./types\"\n\nexport interface Todo {\n  id: number\n  title: string\n  completed: boolean\n}\n\nexport interface FetchTodosAction {\n  type: ActionTypes.fetchTodos\n  payload: Todo[]\n}\n// creating an interface to describe an action is very useful\n\nconst url = \"https://jsonplaceholder.typicode.com/todos\"\n\nexport const fetchTodos = () => {\n  return async (dispatch: Dispatch) => {\n    const response = await axios.get<Todo[]>(url)\n    // the Todo[] tells typescript that inside of response data\n    // we will have a Todo that satisfies the Todo interface.\n    // Await suspends the execution until an asychoronous function return promise is fullfilled\n    dispatch<FetchTodosAction>({\n      //we add the generic type to ensure we are always passing in an object with the correct types\n      type: ActionTypes.fetchTodos,\n      payload: response.data,\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}