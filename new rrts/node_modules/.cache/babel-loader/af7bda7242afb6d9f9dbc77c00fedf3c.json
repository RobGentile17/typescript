{"ast":null,"code":"var _jsxFileName = \"/Users/robgentile/Dev/udemy/typescript_course/rrts/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { App } from './components/App';\nimport { reducers } from './reducers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(reducers, applyMiddleware(thunk));\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this), document.querySelector('#root')); /////////////////////////////////////////////////////////////////////////////\n// const App = (props: AppProps): JSX.Element => {\n//   return <div>{props.color}</div>\n// } ** This is how you define a functional component","map":{"version":3,"sources":["/Users/robgentile/Dev/udemy/typescript_course/rrts/src/index.tsx"],"names":["React","ReactDOM","createStore","applyMiddleware","Provider","thunk","App","reducers","store","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,MAAMC,KAAK,GAAGN,WAAW,CAAEK,QAAF,EAAYJ,eAAe,CAACE,KAAD,CAA3B,CAAzB;AAGAJ,QAAQ,CAACQ,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEE,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAJF,E,CAOA;AAEA;AACA;AACA","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { App } from './components/App'\nimport { reducers } from './reducers'\n\nconst store = createStore( reducers, applyMiddleware(thunk))\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n)\n\n/////////////////////////////////////////////////////////////////////////////\n\n// const App = (props: AppProps): JSX.Element => {\n//   return <div>{props.color}</div>\n// } ** This is how you define a functional component"]},"metadata":{},"sourceType":"module"}